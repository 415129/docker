name: Add to Dependabot PR
on: 
  pull_request_target:
      types: [opened]

permissions:
  pull-requests: write
  issues: write
  repository-projects: write

jobs:
  dependabot:
    runs-on: ubuntu-latest
    # Checking the actor will prevent your Action run failing on non-Dependabot PRs
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - name: Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: "${{ secrets.BOT_TOKEN }}"
      # The following properties are now available:
      #  - steps.metadata.outputs.dependency-names
      #  - steps.metadata.outputs.dependency-type
      #  - steps.metadata.outputs.update-type 

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: true
          token: ${{ secrets.BOT_TOKEN }}

      # assign a reviewer from folks listed in reviewer-lottery.yml    
      - uses: uesteibar/reviewer-lottery@v2
        with:
          repo-token: ${{ secrets.BOT_TOKEN }}

      # automation steps for liquibase-core
      - name: Get CORE_TARGET_VERSION from PR
        if: ${{ steps.metadata.outputs.dependency-name == 'org.liquibase:liquibase-core' }}   
        run: |
          echo 'CORE_TARGET_VERSION<<EOF' >> $GITHUB_ENV
          gh pr view "$PR_URL" | grep "Bump liquibase-core" | awk '{ print $7 }' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.BOT_TOKEN}} 
          
      - name: Compute sha256 for liquibase-$CORE_TARGET_VERSION.tar.gz 
        if: ${{ steps.metadata.outputs.dependency-name == 'org.liquibase:liquibase-core' }}  
        run: |
          echo 'CORE_TARGET_SHA<<EOF' >> $GITHUB_ENV
          curl -LsS https://github.com/liquibase/liquibase/releases/download/v$CORE_TARGET_VERSION/liquibase-$CORE_TARGET_VERSION.tar.gz | sha256sum | awk '{ print $1 }' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          
      - name: edit core Dockerfile
        if: ${{ steps.metadata.outputs.dependency-name == 'org.liquibase:liquibase-core' }}  
        run: |
          sed -i 's/^ARG LIQUIBASE_VERSION=.*/ARG LIQUIBASE_VERSION='"$CORE_TARGET_VERSION"'/' ${{ github.workspace }}/Dockerfile
          sed -i 's/^ARG LB_SHA256=.*/ARG LB_SHA256='"$CORE_TARGET_SHA"'/' ${{ github.workspace }}/Dockerfile

      - name: push Dockerfile edit back to PR
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "auto-update liquibase-core Dockerfile"
          git push -u origin HEAD:"$GITHUB_HEAD_REF"
        env:
          GITHUB_HEAD_REF: ${{github.head_ref}}

      - name: Bump version and push tag
        if: ${{ steps.metadata.outputs.dependency-name == 'org.liquibase:liquibase-core' }} 
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.BOT_TOKEN }}
          create_annotated_tag: true
          custom_tag : ${{env.CORE_TARGET_VERSION}}


      # automation steps for liquibase-snowflake extension
      - name: Get SNOWFLAKE_TARGET_VERSION from PR
        if: ${{ steps.metadata.outputs.dependency-name == 'org.liquibase.ext:liquibase-snowflake' }} 
        run: |
          echo 'SNOWFLAKE_TARGET_VERSION<<EOF' >> $GITHUB_ENV
          gh pr view "$PR_URL" | grep "Bump liquibase-snowflake" | awk '{ print $7 }' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.BOT_TOKEN}} 
          
      - name: Compute sha1 for snowflake-extension.jar
        run: |
          echo 'SNOWFLAKE_TARGET_SHA<<EOF' >> $GITHUB_ENV
          curl -LsS https://repo1.maven.org/maven2/org/liquibase/ext/liquibase-snowflake/$SNOWFLAKE_TARGET_VERSION/liquibase-snowflake-$SNOWFLAKE_TARGET_VERSION.jar  | sha1sum | awk '{ print $1 }' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          
      - name: edit liquibase-snowflake Dockerfile
        if: ${{ steps.metadata.outputs.dependency-name == 'org.liquibase.ext:liquibase-snowflake' }} 
        run: |
          sed -i 's/^ARG SNOWFLAKE_EXTENSION_VERSION=.*/ARG SNOWFLAKE_EXTENSION_VERSION='"$SNOWFLAKE_TARGET_VERSION"'/' ${{ github.workspace }}/snowflake/Dockerfile
          sed -i 's/^ARG SNOWFLAKE_EXTENSION_SHA1=.*/ARG SNOWFLAKE_EXTENSION_SHA1='"$SNOWFLAKE_TARGET_SHA"'/' ${{ github.workspace }}/snowflake/Dockerfile

      - name: push Dockerfile edit back to PR
        if: ${{ steps.metadata.outputs.dependency-name == 'org.liquibase.ext:liquibase-snowflake' }} 
        run: |
          git config --global user.name "github_actions"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "auto-update liquibase-snowflake Dockerfile"
          git push -u origin HEAD:"$GITHUB_HEAD_REF"
        env:
          GITHUB_HEAD_REF: ${{github.head_ref}}

      - name: Bump version and push tag
        if: ${{ steps.metadata.outputs.dependency-name == 'org.liquibase.ext:liquibase-snowflake' }} 
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.BOT_TOKEN }}
          create_annotated_tag: true
          custom_tag : ${{env.SNOWFLAKE_TARGET_VERSION}}